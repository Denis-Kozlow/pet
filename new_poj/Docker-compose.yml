services:
  app:
    container_name: app1
    build: .
    restart: unless-stopped
    command: sh -c "poetry run uvicorn src.app.main:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
      - redis
  worker:
    container_name: worker1
    build: .
    restart: unless-stopped
    command: sh -c "poetry run celery -A src.app.worker.celery_config.celery_app worker --loglevel=info"
    depends_on:
      - postgres
      - rabbitmq
      - redis
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis_container
    image: redis
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:management-alpine
    restart: unless-stopped
    volumes:
      - ./data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
